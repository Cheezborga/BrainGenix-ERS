#version 400

// Set IO
out vec4 FragColor;
in vec3 UV;
in vec3 OriginalPosition;

// Get Configuration Params
uniform vec3 CameraPosition;
uniform vec3 GRID_COLOR_BASE;
uniform vec3 GRID_COLOR_X;
uniform vec3 GRID_COLOR_Z;
uniform float GRID_SIZE;
uniform float GRID_LINE_THICKNESS;




void main(void)
{

    if(fract(UV.x / GRID_SIZE) < GRID_LINE_THICKNESS || fract(UV.y / GRID_SIZE) < GRID_LINE_THICKNESS) {

        // Calculate Opacity Based On Distance From Camera
        vec3 CameraLocation2D = vec3(CameraPosition[0], CameraPosition[2], 0.0f);
        float Distance = distance(CameraLocation2D, 25.0f*OriginalPosition);
        float Alpha = 50.0f/pow(Distance, 3);
        
        // Draw Pixel
        FragColor = vec4(GRID_COLOR_BASE, Alpha);
    
    }
}

















